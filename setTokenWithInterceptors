SETUP axios.js ====================================================================================
import axios from "axios";

let dataToken = "";

const setToken = (token) => {
  dataToken = token;
};

const axiosApiIntances = axios.create({
  baseURL: "https://jsonplaceholder.typicode.com/",
});

// Add a request interceptor
axiosApiIntances.interceptors.request.use(
  function (config) {
    // Do something before request is sent
    config.headers = {
      Authorization: `Bearer ${dataToken}`,
    };
    return config;
  },
  function (error) {
    // Do something with request error
    return Promise.reject(error);
  }
);

// Add a response interceptor
axiosApiIntances.interceptors.response.use(
  function (response) {
    // Any status code that lie within the range of 2xx cause this function to trigger
    // Do something with response data
    return response;
  },
  function (error) {
    // Any status codes that falls outside the range of 2xx cause this function to trigger
    // Do something with response error
    if (error.response.status === 403) {
      alert("Please Login !");
      Cookie.remove("token");
      Cookie.remove("user");
      setToken("");
      window.location.href = "/login";
    }
    return Promise.reject(error);
  }
);

export default { axiosApiIntances, setToken };

SETUP index.js/HOME PAGE ====================================================================================
import { useState } from "react";
import { useRouter } from "next/router";
import Image from "next/image";
import axios from "../utils/axios";
import Layout from "../components/Layout";
import Navbar from "../components/module/Navbar";
import styles from "../styles/Home.module.css";
import { authPage } from "../middleware/authorizationPage";

export async function getServerSideProps(context) {
  const data = await authPage(context);
  // console.log(data);
  axios.setToken(data.token);

  const res = await axios.axiosApiIntances
    .get("users")
    .then((res) => {
      // console.log(res.data);
      return res.data;
    })
    .catch((err) => {
      // console.log(err);
      return [];
    });

  return {
    props: { users: res, userLogin: data },
  };
}

export default function Home(props) {
  const router = useRouter();
  // console.log(props);
  const [users, setUsers] = useState(props.users);

  const handleProfile = (id) => {
    router.push(`/profile/${id}`);
  };

  return (
    <Layout title="Home">
      <Navbar />
      <br />
      {/* <img src="/vercel.svg" alt="My Image" className="logo" /> */}
      <div>
        <Image
          src="/profile/vercel.svg"
          alt="Picture of the author"
          width=""
          height=""
        />
      </div>
      {/* <h1 className={styles.titleHead}>Home Page !</h1> */}
      {/* <h2>{process.env.APP_NAME}</h2> */}
      {users.map((item, index) => (
        <div className="d-grid gap-2 my-2" key={index}>
          <button
            className="btn btn-primary"
            type="button"
            onClick={() => handleProfile(item.id)}
          >
            {item.name}
          </button>
        </div>
      ))}
    </Layout>
  );
}

SETUP Navbar.js/COMPONENT NAVBAR ====================================================================================
import Link from "next/link";
import { useRouter } from "next/router";
import Cookie from "js-cookie";
import axios from "../../utils/axios";

export default function Navbar() {
  const router = useRouter();

  const handleLogout = () => {
    axios.setToken("");
    Cookie.remove("token");
    Cookie.remove("user");
    router.push("/login");
  };

  return (
    <>
      <Link href="/">Home</Link> | <Link href="/profile">Profile</Link> |{" "}
      <button onClick={handleLogout}>Logout</button>
    </>
  );
}
